#!nsh


#disable autostart and make nsh available for debugging

set MODE debug


# connect USB nsh

if sercon
then
	echo "USB connected"

#try to get an USB console
	nshterm /dev/ttyACM0 &
fi


#
# Load default params for this platform
#
if param compare SYS_AUTOCONFIG 1
then
	# Set all params here, then disable autoconfig
	param set MC_ATTRATE_D 0
	param set MC_ATTRATE_I 0
	param set MC_ATTRATE_P 0.13
	param set MC_ATT_D 0
	param set MC_ATT_I 0.3
	param set MC_ATT_P 5
	param set MC_YAWPOS_D 0.1
	param set MC_YAWPOS_I 0.15
	param set MC_YAWPOS_P 1
	param set MC_YAWRATE_D 0
	param set MC_YAWRATE_I 0
	param set MC_YAWRATE_P 0.15

	param set SYS_AUTOCONFIG 0
	param save
fi


# Disable autostarting other apps
#set MODE ardrone
 
echo "[init] doing PX4IOAR startup..."
 
#start lightweight object broker
uorb start


#start the commander on the drone so that the drone
#can react to commands sent from the ground station
commander start


#load parameters from parameters file on sd card
param select /fs/microsd/parameters
if [ -f /fs/microsd/parameters ]
then
	param load /fs/microsd/parameters
fi

#set Mavlink Parameter to PX4IOAR mode
param set MAV_TYPE 2
param set BAT_V_SCALING 0.008381


#start Malink to send data to ground station (QGC) 
mavlinkf start -d /dev/ttyS3 -b 4000000
usleep 5000


#
# Configure PX4FMU for operation with PX4IOAR
#
fmu mode_gpio_serial

#start ar drone motor interface
#(usart 2)
ardrone_interface start -d /dev/ttyS1


sh /etc/init.d/rc.sensors


#remote &


#
# Start the attitude estimator
#
attitude_estimator_ekf start
 
#
# Start position estimator
#
#position_estimator_inav start

#
# Start attitude control
#
multirotor_att_control start

#
# Start position control
#
#multirotor_pos_control start


set MODE custom


#optical flow sensor on uart5
mavlink_onboard start -d /dev/ttyS2 -b 115200



